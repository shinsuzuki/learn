本書では、これまでに各パッケージを1つ1つ手動で pip install でインストールしていましたが、
それが面倒な場合には、次の方法を試してみてください。

====================================================================================================
開発環境を簡単に整える方法：pip install -r requirements.txt
====================================================================================================

プロジェクトで使用するPythonパッケージをリスト化したファイル（今回は「requirements.txt」とします）を
使用すると、一度にすべての必要なパッケージをインストールすることができます。

■：手順
「requirements.txt」ファイルを準備：
	プロジェクトで使用するパッケージをリスト化した「requirements.txt」ファイルを
	プロジェクトのディレクトリ（カレントディレクトリ）に保存します。


コマンドを実行：
	ターミナルやコマンドプロンプトで、requirements.txt があるディレクトリに移動し、次のコマンドを実行します

====================================================================================================
【コマンド】

	pip install -r requirements.txt

	-r オプションを使用することで、指定したファイルに記載されている
	パッケージを一括でインストールするように指示します。
	ファイルには、必要なPythonパッケージのリストが書かれており、
	それを元に pip がパッケージを自動的にインストールします。

====================================================================================================

上記により、パッケージが自動的にインストールされ、開発環境が整います。


■：補足：requirements.txt の作り方
すでにある開発環境から requirements.txt を生成する場合、次のコマンドを使用します

====================================================================================================
【コマンド】

	pip freeze > requirements.txt

	pip freeze コマンドについて
	pip freeze は、現在のPython環境にインストールされているすべてのパッケージと
	そのバージョンを一覧表示するコマンドです。
	これにより、どのパッケージがどのバージョンでインストールされているかを簡単に確認し、
	そのまま他の環境でも同じセットアップが可能になります。

====================================================================================================